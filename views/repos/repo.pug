//-
//- Copyright (c) Microsoft.
//- Licensed under the MIT license. See LICENSE file in the project root for full license information.
//-

extends ../layout

mixin simplePersonView(account)
  - var shorthandName = account.login
  div.horizontal-space-right.vertical-space.pull-left(style='width:36px;height:36px;display:block;vertical-align:middle')
    if account.avatar_url
      img(src=account.avatar_url + '&s=96', style='width:36px;height:36px', title='Avatar of ' + shorthandName)
  div(style='display:block;vertical-align:middle')
    h4
      a(href='/people?q=' + account.login)= shorthandName

mixin teamsList(teams, hideJoinOption)
  if teams && teams.length > 0
    table(style='width:100%')
      tbody
        each permission in teams
          - var team = permission.team
          tr
            td
              ul.list-inline
                - var isMember = teamSets && teamSets.member.has(team.id)
                //- formerly: permission.relativeJoinLink
                if hideJoinOption
                  li
                    ul.list-unstyled
                      li: strong= team.name
                      li: p= team.description
                else
                  li
                    a.btn.btn-sm.btn-muted-more(href=permission.relativePortalLink, title=team.description)= team.name
                if teamSets && teamSets.maintained.has(team.id)
                  li.text-primary You're a maintainer
                else if teamSets && teamSets.member.has(team.id)
                  li.text-primary You're a member
              if team.description && !hideJoinOption
                p= team.description
  else
    p No teams with this permission.

block content

  //- Services
  - var octicon = viewServices.octicon
  - var fileSize = viewServices.fileSize
  - var moment = viewServices.moment

  //- View constants
  - var maxReaders = 10

  //- Variables
  - var githubUrl = 'https://github.com/' + repo.full_name
  - var cloneUrl = repo.clone_url
  - var sshUrl = repo.ssh_url
  - var admin = repoPermissions && repoPermissions.allowAdministration

  .container
    .row: .col-md-12
        if fromReposPage
          .nav
            ul.pager.zero-pad-bottom
              li.previous
                a(href='javascript:window.history.back()')
                  span(aria-hidden=true) &larr;
                  = ' Back'
        
        if repositoryMetadataEntity && repositoryMetadataEntity.lockdownState && repositoryMetadataEntity.lockdownState !== 'unlocked'
          div.label.label-danger SETUP INCOMPLETE
        
        - var hugeHeading = repo.name.length < 33
        h1(class={huge: hugeHeading})
          a(href='https://github.com/' + repo.full_name, target="_blank")= repo.name
          if repo.private === true
            | &nbsp;
            .label.label-warning(class={shrink66: !hugeHeading, shrink50: hugeHeading}) Private
        h6= repo.full_name.replace('/' + repo.name, '') + ' organization'
        if repo.fork
          h6
            | Forked&nbsp;
            if entity.parent && entity.parent.full_name
                | from&nbsp;
                a(href='https://github.com/' + entity.parent.full_name, target='_new')= entity.parent.full_name

        if repo.description
          p.lead=repo.description

    include ./pills

    .row
      .col-md-8

        small
          ul.list-inline.list-horizontal-space
            //- NOTES:
            //- * Can minimize some; 10,827 becomes 10.8k, for example

            if repo.language
              li
                span
                  != octicon('primitive-dot', 10)
                = ' ' + repo.language
            if repo.license && repo.license.featured && repo.license.name
              li
                != octicon('law', 15)
                = ' ' + repo.license.name
            if repo.stargazers_count
              li
                != octicon('star', 15)
                = ' ' + repo.stargazers_count.toLocaleString()
            if repo.forks_count
              li
                != octicon('repo-forked', 12)
                = ' ' + repo.forks_count.toLocaleString()
            if repo.size
              li
                != octicon('database', 13)
                = ' ' + fileSize(repo.size * 1024)
            if entity.disabled
              li: strong DISABLED BY GITHUB
            if repo.fork
              li
                != octicon('repo-forked', 15)
                small &nbsp;fork&nbsp;
                if entity.parent && entity.parent.full_name
                  small
                    | upstream:&nbsp;
                    a(href='https://github.com/' + entity.parent.full_name, target='_new')= entity.parent.full_name
        ul.list-inline(style='margin-top:24px;margin-bottom:48px')
          li: a.btn.btn-sm.btn-muted-more(href=githubUrl, target="_blank", title='View ' + repo.full_name + ' on GitHub.com')
            = 'Open on GitHub.com '
            != octicon('mark-github', 18)
          if cloneUrl
            li: a.btn.btn-sm.btn-muted-more(href='https://github.com/' + repo.full_name, target="_blank") HTTPS clone
          if sshUrl
            li: a.btn.btn-sm.btn-muted-more(href='https://github.com/' + repo.full_name, target="_blank") SSH clone
          if repo.homepage
            li: a.btn.btn-sm.btn-muted-more(href=repo.homepage, target='_new', title=repo.homepage) Homepage

        if repo.moment
          //-h2 Timeline
          ul.list-inline.list-horizontal-space
            if repo.moment.pushed_at
              li
                | Commits pushed
                br
                strong= repo.moment.pushed_at
            if repo.moment.updated_at
              li
                | Updated
                br
                strong= repo.moment.updated_at
            if repo.moment.created_at
              li
                | Created
                br
                strong= repo.moment.created_at
            if repo.default_branch
              li
                | Default branch
                br
                strong= repo.default_branch

        if organizationSupportsUpdatesApp && repo.default_branch !== 'main' && admin
          .alert.alert-gray
            p: small.
              Guidance regarding inclusivity and the default branch name can be found at 
              #[a(href='https://aka.ms/github/renaming', target='_new') aka.ms/github/renaming]. This 
              repo currently has the default branch name #[strong= repo.default_branch].

      .col-md-4
        if admin
          h3 Repository management

          ul.list-unstyled.list-vspace
            li
              a.btn.btn-sm(
                class=repoPermissions.admin ? 'btn-primary' : 'btn-muted-more',
                href=githubUrl,
                target="_blank",
                title='View ' + repo.full_name + ' on GitHub.com')
                = 'Manage on GitHub.com '
                != octicon('mark-github', 18)
            if !repoPermissions.admin
              li: p.
                You are not a GitHub repo administrator for this repo and may not be able to manage all settings directly on GitHub.
            li: a.btn.btn-sm.btn-muted-more(
              href='https://github.com/' + repo.full_name + '/settings',
              target='_blank'
            ) GitHub Settings
            li: a.btn.btn-sm.btn-muted-more(
              href='https://github.com/' + repo.full_name + '/settings/collaboration',
              target='_blank'
            ) Outside collaborators
            li: a.btn.btn-sm.btn-muted-more(
              href='https://github.com/' + repo.full_name + '/settings/collaboration',
              target='_blank'
            ) Team permissions
            li: a.btn.btn-sm.btn-muted-more(
              href='https://github.com/' + repo.full_name + '/settings/hooks',
              target='_blank'
            ) Webhooks

            if repoPermissions.allowAdministration && repo.private === true
              ul.list-unstyled.list-vspace
                li
                  form(method='post')
                    input.btn.btn-sm(
                      type='submit',
                      name='make-repo-public'
                      class='btn-danger',
                      value='Make repo public',
                      onclick='return confirm(\'Are you sure that you want to make this repo public?\');'
                      title='Click to toggle this repo from private to public')

    if repositoryMetadataEntity && repositoryMetadataEntity.repositoryName && repositoryMetadataEntity.organizationName
      #corporateMetadata
        hr

        if repositoryMetadataEntity.lockdownState == 'locked' || repositoryMetadataEntity.lockdownState == 'administratorLocked'
          .row: .col-md-12
            h3
              if repository.fork
                | Fork Setup
              else
                | Repository Setup
              = ' '
              span.label.label-default INCOMPLETE

            if repositoryMetadataEntity.lockdownState == 'locked'
              h5 LOCKED REPOSITORY
              if repository.fork
                strong This repository has been approved by a corporate GitHub administrator and is waiting for the original user to finalize setting up the fork.
              if activeUserCorporateId == repositoryMetadataEntity.createdByCorporateId
                p You created this repository on GitHub.com but have not yet completed configuring your repository.
                p: a.btn.btn-sm.btn-primary(href='/' + organization.name + '/wizard?existingreponame=' + repository.name + '&existingrepoid=' + repository.id) Complete repository setup
              else
                p
                  small Only the individual who created the repo #{repositoryMetadataEntity.createdByCorporateUsername} can complete the setup wizard through the following link:
                  br
                  a.btn.btn-sm.btn-muted(href='/' + organization.name + '/wizard?existingreponame=' + repository.name + '&existingrepoid=' + repository.id) Complete repository setup

            if repositoryMetadataEntity.lockdownState == 'administratorLocked'
              h5 AWAITING MORE INFORMATION
              p This #{repository.fork ? 'fork' : 'repository'} needs to be approved by a corporate GitHub administrator after the person who created the fork should reach out to the #[a(href='mailto:' + config.brand.operationsMail)= config.brand.operationsMail] to provide the business justification and other information:
              ul
                li Why an official fork is being created
                li Information including prior communications with the upstream open source community where the idea of forking was socialized
                li Information about how you will support this fork long-term, including responding to contributions through pull requests and issues
                li Whether there are plans to eventually contribute the forked changes upstream and delete this fork
                li Acknowledgement that you will help govern this fork and work with any others in this GitHub org who would also like to maintain this fork
                li Other useful information including your business goals relating to this project

              if activeUserCorporateId == repositoryMetadataEntity.createdByCorporateId
                p If this #{repository.fork ? 'fork' : 'repository'} was an accident, you can delete this #{repository.fork ? 'fork' : 'repository'} now:
                p: a.btn.btn-sm.btn-primary(href=href=repository.absoluteBaseUrl + 'delete') Delete now
              else
                p
                  small If this #{repository.fork ? 'fork' : 'repository'} was an accident, the individual who created it, #{repositoryMetadataEntity.createdByCorporateUsername}, can delete this #{repository.fork ? 'fork' : 'repository'} using the following link:
                  br
                  a.btn.btn-sm.btn-muted(href=repository.absoluteBaseUrl + 'delete') Delete now

          if repositoryMetadataEntity.createdByCorporateDisplayName || repositoryMetadataEntity.createdByCorporateUsername
            .row
              .col-md-12
                h5 CREATED BY
                  p
                    if repositoryMetadataEntity.createdByCorporateDisplayName
                      =repositoryMetadataEntity.createdByCorporateDisplayName
                    if repositoryMetadataEntity.createdByCorporateUsername
                      = ' / '
                      =repositoryMetadataEntity.createdByCorporateUsername
          hr

        if repositoryMetadataEntity && repositoryMetadataEntity.repositoryName && repositoryMetadataEntity.organizationName
          h3 Corporate metadata
          include ../includes/corporateRepoMetadata

    if config && config.urls && config.urls.githubInsights
      hr
      h4 Metrics
      p.
        Explore GitHub data, gain insights, build your community by learning to
        query the
        #[a(href=config.urls.githubInsights, target='_new') GitHub Insights]
        data provided ghcrawler and CloudMine.
        #[a(href=config.urls.githubInsights, target='_new') Learn more...]

    if repo && repo.id
      p: small= 'Repository ' + repo.full_name + ' has the GitHub ID ' + repo.id

    if reposDataAgeInformation
      p.text-primary(style='margin-bottom:24px')
        if reposDataAgeInformation.changed
          = 'Updated ' + reposDataAgeInformation.changed
        if reposDataAgeInformation.updated && reposDataAgeInformation.changed
          |, refreshed
        else
          | Refreshed
        if reposDataAgeInformation.updated
          = ' ' + reposDataAgeInformation.updated
    //-div
      h3 Raw metadata
      small: pre= JSON.stringify(repositoryMetadataEntity, undefined, 2)
